{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/main/product.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\n\n\nconst routes: Routes = [\n  { path: 'main', component: MainComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-ethoca-shopping-cart';\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-light bg-success\">\n  <a [routerLink]=\"['/']\" routerLinkActive=\"active\" class=\"navbar-brand navbarNavAltMarkup\">Eliminator Shopping\n    Cart</a>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <ul class=\"nav navbar-nav\">\n      <li>\n        <a class=\"nav-item nav-link\" [routerLink]=\"['/main']\" routerLinkActive=\"active\">Prescribers\n          <span class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li class=\"dropdown\">\n        <button type=\"button\" class=\"btn btn-info\" data-toggle=\"dropdown\">\n          <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> Cart <span\n            class=\"badge badge-pill badge-danger\">3</span>\n        </button>\n        <div class=\"dropdown-menu\">\n          <div class=\"row total-header-section\">\n            <div class=\"col-lg-6 col-sm-6 col-6\">\n              <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span\n                class=\"badge badge-pill badge-danger\">3</span>\n            </div>\n            <div class=\"col-lg-6 col-sm-6 col-6 total-section text-right\">\n              <p>Total: <span class=\"text-info\">$2,978.24</span></p>\n            </div>\n          </div>\n          <div class=\"row cart-detail\">\n            <div class=\"col-lg-4 col-sm-4 col-4 cart-detail-img\">\n              <img src=\"https://images-na.ssl-images-amazon.com/images/I/811OyrCd5hL._SX425_.jpg\">\n            </div>\n            <div class=\"col-lg-8 col-sm-8 col-8 cart-detail-product\">\n              <p>Sony DSC-RX100M..</p>\n              <span class=\"price text-info\"> $250.22</span> <span class=\"count\"> Quantity:01</span>\n            </div>\n          </div>\n          <div class=\"row cart-detail\">\n            <div class=\"col-lg-4 col-sm-4 col-4 cart-detail-img\">\n              <img src=\"https://cdn2.gsmarena.com/vv/pics/blu/blu-vivo-48-1.jpg\">\n            </div>\n            <div class=\"col-lg-8 col-sm-8 col-8 cart-detail-product\">\n              <p>Vivo DSC-RX100M..</p>\n              <span class=\"price text-info\"> $500.40</span> <span class=\"count\"> Quantity:01</span>\n            </div>\n          </div>\n          <div class=\"row cart-detail\">\n            <div class=\"col-lg-4 col-sm-4 col-4 cart-detail-img\">\n              <img src=\"https://static.toiimg.com/thumb/msid-55980052,width-640,resizemode-4/55980052.jpg\">\n            </div>\n            <div class=\"col-lg-8 col-sm-8 col-8 cart-detail-product\">\n              <p>Lenovo DSC-RX100M..</p>\n              <span class=\"price text-info\"> $445.78</span> <span class=\"count\"> Quantity:01</span>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-lg-12 col-sm-12 col-12 text-center checkout\">\n              <button class=\"btn btn-primary btn-block\">Checkout</button>\n            </div>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport {ProductService } from './main/product.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent\n  ],\n  imports: [\n    FormsModule, HttpClientModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from './product.service';\nimport {IProductDetail} from './IProductDetail';\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  \n\n  constructor(private _productService: ProductService ) { }\n  title = \"Hello\";\n  productDertailsList: IProductDetail[];\n\n  ngOnInit(): void {\n    this.getPrescriber();\n  }\n\n\n  searchList(): any {\n    this.getPrescriber();\n  }\n\n  getPrescriber(): void {\n    debugger;\n    this._productService.getProduct().subscribe(data =>  this.productDertailsList = data);\n    debugger;\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"panel panel-primary\">\n        <div class=\"panel-heading\">\n            <h1>{{title}}</h1>\n        </div>\n    </div>\n\n    <ul class=\"nav nav-tabs\">\n        <li class=\"active\">\n            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#details\" role=\"tab\">Info</a>\n        </li>\n        <li>\n            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#details1\" role=\"tab\">Tasks</a>\n        </li>\n        <li>\n            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#details2\" role=\"tab\">Ledger</a>\n        </li>\n        <li>\n            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#details3\" role=\"tab\">Address</a>\n        </li>\n    </ul>\n\n\n</div>\n<div class=\"panel panel-primary\">\n\n    <div class=\"panel-heading\">\n        <h1>{{title}}</h1>\n    </div>\n    <div class=\"panel-body\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">Search by FirstName:\n                <input id=\"searchBar\" type=\"text\" />\n            </div>\n            <div class=\"col-md-4\">Search by DEA Number:\n                <input id=\"searchBarNumber\" type=\"text\" />\n            </div>\n            <!-- <button class=\"btn btn-primary\" (click)=searchList()>Search</button> -->\n            <!-- <button class=\"btn btn-primary\"  [routerLink]=\"['/addPrescriber']\">Add Prescriber</button> -->\n            <br>\n            <br>\n\n        </div>\n\n        <br>\n        <div class=\"table\">\n            \n                <table *ngIf=\"productDertailsList && productDertailsList.length\" class=\"table table-hover table-bordered\">\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Description</th>\n\n                </tr>\n                <tr *ngFor=\"let temp of productDertailsList\">\n                    <td>\n                        <a (click)=open() [routerLink]=\"[temp.id]\">{{temp.id}}</a>\n                    </td>\n                    <td>{{temp.name}}</td>\n                    <td>{{temp.description}}</td>\n                    <!-- <td>\n                        <tr>Phone Number: {{temp.phoneNumber}}</tr>\n                        <tr>Fax Number: {{temp.faxNumber}}</tr>\n                        <tr>Email Id: {{temp.emailId}}</tr>\n                    </td>\n                    <td>{{temp.specialization}}</td> -->\n                </tr>\n            </table>\n        </div>\n        <div class=\"panel-footer\">\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable'\r\nimport 'rxjs/Rx'\r\nimport { IProductDetail } from './IProductDetail';\r\n\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    _url = 'http://localhost:8090';\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    // getProduct(): Observable<IProductDetail[]> {\r\n    //     debugger;\r\n    //     return this._http.get(this._url + '/product').map((response: Response) => <IProductDetail[]>response.json());\r\n    //     debugger;\r\n    // }\r\n\r\n    getProduct(): Observable<IProductDetail[]> {\r\n        debugger;\r\n        return this.http.get<IProductDetail[]>(this._url + '/product');\r\n    }\r\n\r\n    // getPrescriberById(id): Observable<IProductDetail> {\r\n    //     return this._http.get(this._url + '/prescriber/' + id)\r\n    //         .map((response: Response) => <IProductDetail>response.json());\r\n\r\n    // }\r\n\r\n    // InsertPrescriber(prescriber: IProductDetail): Observable<string> {\r\n    //     debugger;\r\n    //     const headers = new Headers({ 'Content-Type': 'application/json' });\r\n    //     const options = new RequestOptions({ headers: headers });\r\n    //     return this._http.post(this._url + '/prescriber', prescriber, new RequestOptions)\r\n    //         .map((response: Response) => <string>response.json());\r\n    // }\r\n\r\n    // UpdatePrescriber(prescriber: IProductDetail): Observable<string> {\r\n    //     debugger;\r\n    //     const headers = new Headers({ 'Content-Type': 'application/json' });\r\n    //     const options = new RequestOptions({ headers: headers });\r\n    //     return this._http.put(this._url + '/prescriber', prescriber, new RequestOptions)\r\n    //         .map((response: Response) => <string>response.json());\r\n    // }\r\n\r\n    // UpdatePrescriberStatus(prescriber: IProductDetail): Observable<string> {\r\n    //     debugger;\r\n    //     const headers = new Headers({ 'Content-Type': 'application/json' });\r\n    //     const options = new RequestOptions({ headers: headers });\r\n    //     return this._http.put(this._url + '/prescriber/s', prescriber, new RequestOptions)\r\n    //         .map((response: Response) => <string>response.json());\r\n    // }\r\n\r\n\r\n    DeletePrescriber(id): Observable<string> {\r\n\r\n        // return newFunction(id);\r\n        return this.http.delete(this._url + '/prescriber/' + id)\r\n            .map((response: Response) => <string>response.json()[0]);\r\n    }\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}